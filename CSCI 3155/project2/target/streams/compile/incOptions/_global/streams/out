[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /Users/pournasengupta/Dropbox/csci3155/project2/target/scala-2.12/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mRegistering generated classes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	FigValue$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	IfThenElse$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Circle.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyCircle.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Circle$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Extend$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EmptyEnvironment$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Gt.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LetRec$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Line.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	And$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Figure.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$$anon$1$$anon$5.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Ident.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Program.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyCanvas.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FigValue.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$$anon$1$$anon$7.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$$anon$1$$anon$4.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Polygon.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BoolValue$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Or.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LetRec.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	NumValue$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Ident$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Eq.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Div$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	BoolValue.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	LettuceParser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Interpreter.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Closure.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunDef$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ExtendREC$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Or$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Interpreter$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Geq.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	TestPrograms$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Environment.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Closure$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EquiTriangle.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Neq$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Const.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Rectangle.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Plus$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Geq$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyCircle$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Let$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Not.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ValueOps$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Rectangle$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	IfThenElse.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Minus$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Eq$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Not$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunDef.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ExtendREC.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Gt$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Polygon$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Mult.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	And.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$$anon$1$$anon$3.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Const$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Value.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Div.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ConstBool$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	TopLevel$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunCall.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$$anon$1$$anon$6.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	TestPrograms.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	TopLevel.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Plus.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Let.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ValueOps.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	NumValue.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Minus.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	DrawingCanvas.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EquiTriangle$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ConstBool.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Extend.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Line$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Mult$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CanvasRenderTest$$anon$1$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Expr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunCall$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	EmptyEnvironment.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Neq.class[0m
[0m[[0m[0mdebug[0m] [0m[0mRemoving the temporary directory used for backing up class files: /Users/pournasengupta/Dropbox/csci3155/project2/target/scala-2.12/classes.bak[0m
